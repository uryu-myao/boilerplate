/*!******************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[3]!./styles/index.scss ***!
  \******************************************************************************************************************************************************************************************************************************************/
@import url(https://fonts.googleapis.com/css?family=Fjalla+One);
/*!**********************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[3]!./styles/index.scss (1) ***!
  \**********************************************************************************************************************************************************************************************************************************************/
@import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro);
/*!**********************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[3]!./styles/index.scss (2) ***!
  \**********************************************************************************************************************************************************************************************************************************************/
@import url(https://fonts.googleapis.com/css?family=Anton);
/*!**********************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[3]!./styles/index.scss (3) ***!
  \**********************************************************************************************************************************************************************************************************************************************/
@import url(https://fonts.googleapis.com/css?family=Source+Code+Pro);
/*!**********************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[3]!./styles/index.scss (4) ***!
  \**********************************************************************************************************************************************************************************************************************************************/
@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/*  =============================================
 *                URYU EDITED  ▼         　  ****
 *  ============================================= */
/* Remove `figure` and `dl` elements margin in all browsers.
   ========================================================================== */
figure,
dl {
  margin: 0;
}

/* Reset the list style in all browsers.
   ========================================================================== */
ul,
ol {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

li {
  list-style: none;
}

/* Remove the `a` element underbar in all browsers.
   ========================================================================== */
a {
  text-decoration: none;
}

/* Remove `h1~6`, `dd`, `dt`, `li` elements margin for easy starting in all browsers.
   ========================================================================== */
h1,
h2,
h3,
h4,
h5,
h6,
dd,
dt,
li {
  margin: 0;
  line-height: 1;
}

/* Reset `input`, `textarea`, `select` elements styles in all browsers.
   ========================================================================== */
label,
input,
textarea {
  border: 0;
  margin: 0;
  padding: 0;
  list-style: none;
}

/* Add the auto kerning to OTF including old Kanji charactors in all browsers.
   ========================================================================== */
body {
  font-feature-settings: "palt" 1;
}

/* Smooth lettering
   ========================================================================== */
body {
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: unset;
}
@media only screen and (-webkit-min-device-pixel-ratio: 2), (min-resolution: 2dppx) {
  body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
}

/* Remove `iframe` element border in all browsers.
   ========================================================================== */
iframe {
  border: 0;
}

/* Remove `input` and `button` element border in all browsers.
 * 1. For firefox
 * 2. For all browsers
   ========================================================================== */
input[type=button i],
input[type=submit i],
input[type=reset i],
input[type=file i]::-webkit-file-upload-button,
button {
  border: 0;
}

button {
  border-top-width: 0; /* 1 */
  border-bottom-width: 0; /* 1 */
  border-right-width: 0; /* 1 */
  border-left-width: 0; /* 1 */
  padding: 0; /* 2 */
}

/* Remove margin between table units in all browsers
   ========================================================================== */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* Reset clicking foucus blue border in all browsers
   ========================================================================== */
div:focus,
a:focus,
img:focus,
span:focus,
li:focus,
picture:focus,
figure:focus,
button:focus,
input:focus,
textarea:focus,
select:focus {
  outline: 1px solid rgba(0, 0, 0, 0.1);
}

/* Switch to border-box for box-sizing
   ========================================================================== */
* {
  box-sizing: border-box;
}

/**
 * make 1em = 10px
 */
html,
body,
h1, h2, h3, h4, h5, h6 {
  font-size: 62.5%;
}

img[alt=""],
img:not([alt]) {
  border: 1px dashed #c00;
}

body {
  -webkit-touch-callout: none; /* iOS Safari */
  -webkit-user-select: none; /* Safari */
  -khtml-user-select: none; /* Konqueror HTML */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* Internet Explorer/Edge */
  user-select: none;
}

input:-webkit-autofill {
  box-shadow: 0 0 0 1000px skyblue inset;
}

input::placeholder {
  color: skyblue;
  transition: all 0.1s ease-in-out;
}

input::-webkit-input-placeholder {
  color: skyblue;
  transition: all 0.1s ease-in-out;
}

input::-moz-placeholder {
  color: skyblue;
  transition: all 0.1s ease-in-out;
}

input::-ms-placeholder {
  color: skyblue;
  transition: all 0.1s ease-in-out;
}

textarea::placeholder {
  color: skyblue;
  transition: all 0.1s ease-in-out;
}

textarea::-webkit-input-placeholder {
  color: skyblue;
  transition: all 0.1s ease-in-out;
}

textarea::-moz-placeholder {
  color: skyblue;
  transition: all 0.1s ease-in-out;
}

textarea::-ms-placeholder {
  color: skyblue;
  transition: all 0.1s ease-in-out;
}

input:focus::-webkit-input-placeholder {
  color: transparent;
}

input:focus::-ms-placeholder {
  color: transparent;
}

input:focus::-moz-placeholder {
  color: transparent;
}

textarea:focus::-webkit-input-placeholder {
  color: transparent;
}

textarea:focus::-ms-placeholder {
  color: transparent;
}

textarea:focus::-moz-placeholder {
  color: transparent;
}

textarea {
  resize: none;
}

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

.pc {
  display: block;
}

.sp {
  display: none;
}

@media only screen and (max-width: 768px) {
  .pc {
    display: none;
  }
  .sp {
    display: block;
  }
}
/* M Q
 *
 * 'xsmall'  : 320px,
 * 'small'   : 600px,
 * 'medium'  : 768px,
 * 'large'   : 1024px,
 * 'xlarge'  : 1280px,
 * 'xxlarge' : 1440px,

 * use max
 * .elements {
 *   @include mq (large) {
 *     ...
 *   }
 *   @include mq (xlarge, max, true ) {
 *     ...
 *   }
 * }

 * original:
 * https://www.nxworld.net/tips/sass-media-queries-mixin.html
 */

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/